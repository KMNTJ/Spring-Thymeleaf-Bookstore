
 - - - Bookstore - - -

 We will now start to create our training project. This excercise continues through the whole course
 and it will be returned to Github.

- - - - - - - - - - - - - - - - - - - - - 
 - First assignment - Completed 

 Done a.) Create a project called Bookstore by using Spring Initializr page (include web, test)
 Done b.) Add a new controller called BookController which can handle a get request to the path /index
 Done c.) Add a new model class called Book which contains attributes: title, author, year, isbn, price
 Done d.) Add your project to your GitHub account (See the instructions from the moodle)

 Follow the recommended Spring Boot project structure 


- - - - - - - - - - - - - - - - - - - - - 
 - Second assignment - Under progress.

 Use your own bookstore application from the GitHub.
 Check StudentListREST example from the moodle


 1. Bookstore: REST

 A.) Create REST service that return all books (JSON)
  DONE a. Create a method to controller
  DONE b. Ignore one-to-many link from JSON
 B.) Create REST service that return one book by id (JSON)
  DONE a. Create a method to controller
  DONE b. Use path variable to get book id
 C.) Change REST api path to /api
  DONE a. Modify your application.properties

 Push all changes to GitHub


 2. Bookstore: Spring Data REST
 
  UNDER PROGRESS
 
 Use your own bookstore application from the GitHub.
 Enable Spring Data REST by adding dependency to pom.xml
 Test different RESTful services (searching, addingâ€¦)


- - - - - - - - - - - - - - - - - - - - -
 - Third assignment - Waiting for assignment.

Use your own bookstore application from the GitHub.
Check SecureStudentList example from the moodle.

1. Bookstore: Securing the web application -Part I/II-
DONE - a. Add Spring Security to your project by adding dependency
DONE - b. Add Spring Security configuration class which will secure all URLs (requires
          authentication in all URLs) and add two in-memory users with roles USER and ADMIN
DONE - c. Create the login page and add login method to controller
DONE - d. Add logout functionality to your booklist page
DONE - e. Show authenticated username in your booklist page
DONE - f. Restrict Delete book functionality only to users with ADMIN role
  
  Push all changes to GitHub

2. Bookstore: Securing the web application -Part II/II-
DONE - a. Create user entity for your application endusers
          *Attributes: username (unique), password, email, role
DONE - b. Create crud repository for user entity
DONE - c. Implement UserDetailService
DONE - d. Add some users to your database and hash the passwords with BCrypt hashing algorithm.
???? - e. Change Spring Security configuration to use user entites instead of in-memory users in
          authentication.
          --- ? Meant as a requirement to fetch users from a Database ? ---
          --- if yes, then putty + mariadb configuration next. if no, ok ---

  Push all changes to GitHub







